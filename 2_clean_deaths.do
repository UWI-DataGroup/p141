** HEADER -----------------------------------------------------
**  DO-FILE METADATA
    //  algorithm name          2_clean_deaths.do
    //  project:                BNR
    //  analysts:               Jacqueline CAMPBELL
    //  date first created      05-SEP-2019
    // 	date last modified      05-SEP-2019
    //  algorithm task          Clean death data
    //  status                  Completed
    //  objectve                To have one dataset with cleaned 2018 death data.
    //  note 1                  Duplicate 2017 deaths checked using 2018 dataset against 2008-2017 dataset 
    //                          (see '2017 deaths_combined_20190828.xlsx')
    //  note 2                  Duplicates within 2018 deaths checked and identified using conditioinal formatting and 
    //                          field 'namematch' in 2018 dataset (see 'BNRDeathData2018_DATA_2019-08-28_1101_excel.xlsx')
    //  note 3                  Cleaned 2018 dataset to be merged with 2008-2017 death dataset; 
    //                          Redcap database with ALL cleaned deaths to be created.

    
    ** General algorithm set-up
    version 15
    clear all
    macro drop _all
    set more off

    ** Initialising the STATA log and allow automatic page scrolling
    capture {
            program drop _all
    	drop _all
    	log close
    	}

    ** Set working directories: this is for DATASET and LOGFILE import and export
    ** DATASETS to encrypted SharePoint folder
    local datapath "X:/The University of the West Indies/DataGroup - repo_data/data_p141"
    ** LOGFILES to unencrypted OneDrive folder (.gitignore set to IGNORE log files on PUSH to GitHub)
    local logpath X:/OneDrive - The University of the West Indies/repo_datagroup/repo_p141

    ** Close any open log file and open a new log file
    capture log close
    log using "`logpath'\2_clean_deaths.smcl", replace
** HEADER -----------------------------------------------------

***************
** LOAD DATASET  
***************
use "`datapath'\version01\2-working\2018_deaths_prepped_dp"

count //3,344


*****************
** DATA QUALITY  
*****************
** Create quality report - corrections per DA
gen corr_AH=0 //DA code=25
gen corr_KG=0 //DA code=04
gen corr_NR=0 //DA code=20
gen corr_TH=0 //DA code=14
gen corr_intern=0 //DA code=98


*****************
** DATA CLEANING  
*****************
** CLEAN each variable according to below consistency checks and the quality rules in DeathData REDCap database

** Corrections found manually in excel input file prior to import to Stata as some dates were not valid for inclusion in 2019 Redcap deathdb
replace dod=d(09mar2018) if record_id==382 //1 change
replace dod=d(12aug2018) if record_id==2963 //1 change
replace corr_intern=corr_intern+1 if record_id==382|record_id==1909 //2 changes
replace dod=d(31dec2018) if record_id==600 //1 change
replace corr_NR=corr_NR+1 if record_id==600 //1 change
replace dod=d(19jan2018) if record_id==1909 //1 change
replace corr_AH=corr_AH+1 if record_id==2963 //1 change

************************
**  DEATH CERTIFICATE **
**        FORM        **
************************
sort record_id
** record_id (auto-generated by REDCap)
** (1) missing/duplicate
count if record_id==. //0
duplicates list record_id, nolabel sepby(record_id) //1 - record_id=29
replace record_id=3344 if record_id==29 & event==1 //1 change

** event (auto-generated by REDCap)
** (2) missing
count if event==. //0


** dddoa: Y-M-D H:M, readonly
** (3) missing
count if event==1 & dddoa==. //0


** ddda
** (4) missing
count if event==1 & ddda==. //0


** odda
** (5) missing
count if ddda==98 & odda=="" //0
** (6) invalid
count if ddda!=98 & odda!="" //8
//list record_id event dddoa ddda odda if ddda!=98 & odda!=""
replace ddda=25 if ddda!=98 & odda!="" //8 changes; no quality assessment as this field initially didn't have AH's code
replace odda="" if ddda!=98 & odda!="" //8 changes


** certtype: 1=MEDICAL 2=POST MORTEM 3=CORONER 99=ND, required
** (7) missing
count if event==1 & certtype==. //1
//list record_id event dddoa ddda certtype if event==1 & certtype==.
replace certtype=1 if record_id==659 //1 change
replace corr_AH=corr_AH+1 if record_id==659 //1 change


** regnum: Text, if missing=9999
** (8) missing
count if event==1 & regnum==.|event==1 & regnum==0 //0
** (9) invalid
count if event==1 & regnum>9999 //0


** district: 1=A 2=B 3=C 4=D 5=E 6=F
** (10) missing
count if event==1 & district==. //0


** pname: Text, if missing=99
** (11) missing
count if event==1 & pname=="" //0
** (12) invalid
count if event==1 & regexm(pname, "[a-z]") //3
//list record_id event ddda pname if event==1 & regexm(pname, "[a-z]")
replace pname= subinstr(pname,"Suspected to be ","",.) if record_id==2766
replace corr_intern=corr_intern+1 if record_id==2766 //1 change
replace pname=upper(pname) //2 changes
replace corr_KG=corr_KG+1 if record_id==360 //1 change
replace corr_AH=corr_AH+1 if record_id==1122 //1 change
** (13) duplicate
sort pname
quietly by pname:  gen dup = cond(_N==1,0,_n)
sort pname
count if event==1 & dup>0  //90 - some are exact replicas as AH seem to import data twice from Redcap BNRDeathData db into BNRDeathData_2018 db
sort pname record_id
//list record_id dddoa ddda pname regnum district nrn if event==1 & dup>0
replace namematch=1 if record_id==1807|record_id==2489|record_id==2876|record_id==3015|record_id==2147|record_id==2811 ///
					   |record_id==909|record_id==2003|record_id==272|record_id==1544|record_id==1046|record_id==3078 ///
					   |record_id==437|record_id==2936|record_id==2004|record_id==2910|record_id==23|record_id==3066 ///
					   |record_id==1869|record_id==2300|record_id==1631|record_id==3337|record_id==1287|record_id==1887 ///
					   |record_id==1385|record_id==2812|record_id==317|record_id==3159|record_id==438|record_id==1308 ///
					   |record_id==1723|record_id==1726 //32 changes

drop if record_id==420|record_id==822|record_id==1027|record_id==404|record_id==421|record_id==416|record_id==457 ///
		|record_id==412|record_id==405|record_id==413|record_id==411|record_id==408|record_id==937|record_id==454 ///
		|record_id==458|record_id==3064|record_id==410|record_id==417|record_id==456|record_id==406|record_id==402 ///
		|record_id==455|record_id==419|record_id==415|record_id==409|record_id==418|record_id==407|record_id==414 ///
		|record_id==403 //29 deleted
//dropped 937 vs 1099 as AH's had errors with dod and cod; dropped 3064 vs 3060 as TH's had missing field comments
drop dup


** address: Text, if missing=99
** (14) missing
count if event==1 & address=="" //0
** (15) invalid 
count if event==1 & regexm(address, "[a-z]") //3
//list record_id event ddda address if event==1 & regexm(address, "[a-z]")
replace address=upper(address) //3 changes
replace corr_KG=corr_KG+1 if record_id==38|record_id==318 //2 changes
replace corr_AH=corr_AH+1 if record_id==654 //1 change


** parish
** (16) missing
count if event==1 & parish==. //0


** sex:	1=Male 2=Female 99=ND
** (17) missing
count if event==1 & sex==. //1
//list record_id event ddda pname sex if event==1 & sex==.
replace sex=2 if record_id==186 //1 change
replace corr_KG=corr_KG+1 if record_id==186 //1 change
** (18) invalid - female with prostate
count if sex==2 & (regexm(cod1a, "PROSTAT")|regexm(cod1b, "PROSTAT")|regexm(cod1c, "PROSTAT") ///
		|regexm(cod1d, "PROSTAT")|regexm(cod2a, "PROSTAT")|regexm(cod2b, "PROSTAT")) //1
//list record_id ddda pname nrn sex cod* if (regexm(cod1a, "PROSTAT")|regexm(cod1b, "PROSTAT")|regexm(cod1c, "PROSTAT")|regexm(cod1d, "PROSTAT")|regexm(cod2a, "PROSTAT")|regexm(cod2b, "PROSTAT")) & sex==2
recode sex 2=1 if record_id==698 //1 change
replace corr_AH=corr_AH+1 if record_id==698 //1 change
** (19) visual check - first names for those missing nrn
count if sex==1 & nrn==. //112 - check if there is a stata check for this e.g. soundex,etc - 4 changes
//list record_id ddda pname sex if sex==1 & nrn==.
recode sex 1=2 if record_id==1311|record_id==891|record_id==1309|record_id==1723 //4 changes
replace corr_AH=corr_AH+1 if record_id==1311|record_id==1309 //2 changes
replace corr_KG=corr_KG+1 if record_id==891 //1 change
replace corr_NR=corr_NR+1 if record_id==1723 //1 change
** (20) invalid - male with female genital cod
count if sex==1 & (regexm(cod1a, "UTER") | regexm(cod1a, "OMA OF THE VULVA") | ///
			regexm(cod1a, "CHORIOCARCIN") | regexm(cod1a, "ENDOMETRIAL CARCINOMA") | ///
			regexm(cod1a, "ENDOMETRIAL CANC") | regexm(cod1a, "OF ENDOMETRIUM") | ///
			regexm(cod1a, "OF THE ENDOMETRIUM") | regexm(cod1a, "VULVA CARCINOMA") | ///
			regexm(cod1a, "VULVAL CANCER") | regexm(cod1a, "VAGINAL CARCINOMA")) //1
/*list record_id ddda pname nrn sex cod* if sex==1 & (regexm(cod1a, "UTER") | regexm(cod1a, "OMA OF THE VULVA") | ///
			regexm(cod1a, "CHORIOCARCIN") | regexm(cod1a, "ENDOMETRIAL CARCINOMA") | ///
			regexm(cod1a, "ENDOMETRIAL CANC") | regexm(cod1a, "OF ENDOMETRIUM") | ///
			regexm(cod1a, "OF THE ENDOMETRIUM") | regexm(cod1a, "VULVA CARCINOMA") | ///
			regexm(cod1a, "VULVAL CANCER") | regexm(cod1a, "VAGINAL CARCINOMA"))
*/
recode sex 1=2 if record_id==2682 //1 change
replace corr_KG=corr_KG+1 if record_id==2682 //1 change
** (21) visual check - first names for those missing nrn
count if sex==2 & nrn==. //67 - check if there is a stata check for this e.g. soundex,etc - 0 changes
//list record_id ddda pname sex if sex==2 & nrn==.


** age: Integer - min=0, max=999
** (22) missing
count if event==1 & age==. //0
** (23) missing - NRN not missing
count if (age==.|age==0) & nrn!=. //0


** agetxt - 1 "Minutes" 2 "Hours" 3 "Days" 4 "Weeks" 5 "Months" 6 "Years" 99 "ND"
** (25) missing
count if age!=. & agetxt==. //0
** (26) invalid
count if age==999 & agetxt!=99 //0
** (27) visual check - NRN vs agetxt
count if nrn!=. & age!=. & agetxt!=6 //22
list record_id ddda dod nrn age agetxt if nrn!=. & age!=. & agetxt!=6 //checked these using redcap db & electoral list
replace age=69 if record_id==1722 //1 change
replace age=86 if record_id==334 //1 change
replace age=95 if record_id==2523 //1 change
replace age=81 if record_id==1239 //1 change
replace age=100 if record_id==480 //1 change
replace age=83 if record_id==981 //1 change
replace age=71 if record_id==660 //1 change
replace age=75 if record_id==969 //1 change
replace age=85 if record_id==269 //1 change
replace agetxt=6 if record_id==1722|record_id==334|record_id==96|record_id==141|record_id==1378 ///
					|record_id==499|record_id==484|record_id==1146|record_id==2523|record_id==220 ///
					|record_id==1239|record_id==480|record_id==981|record_id==660|record_id==969 ///
					|record_id==353|record_id==2639|record_id==269 //18 changes
replace agetxt=6 if record_id==268 //1 change - correct nrn found in electoral list and changed in below nrn checks
replace corr_AH=corr_AH+1 if record_id==1722|record_id==1378|record_id==1146|record_id==1239|record_id==480 ///
					  |record_id==981|record_id==660|record_id==969 //8 changes
replace corr_KG=corr_KG+1 if record_id==334|record_id==96|record_id==141|record_id==499|record_id==484 ///
					  |record_id==268|record_id==220|record_id==353|record_id==269 //9 changes
replace corr_NR=corr_NR+1 if record_id==2523 //1 change
replace corr_intern=corr_intern+1 if record_id==2639 //1 change


** nrnnd: 1=Yes 2=No
** (28) missing
count if event==1 & nrnnd==. //1
//list record_id ddda nrn if event==1 & nrnnd==.
replace nrnnd=2 if record_id==659 //1 change
replace corr_AH=corr_AH+1 if record_id==659 //1 change
** (29) invalid
count if event==1 & nrn==. & nrnnd==1 //0
** (30) invalid
count if nrn!=. & nrnnd==2 //0

** nrn: dob-####, partial missing=dob-9999, if missing=.
tostring nrn, gen(natregno) format("%15.0f")
replace natregno="" if natregno=="." //252 changes
** (31) missing
count if event==1 & nrnnd==1 & (natregno==""|natregno=="9999999999") //0
** (32) invalid - length (checked against electoral list; no error for DA if leading zero was in redcap db)
count if natregno!="" & length(natregno)!=10 //39
//list record_id ddda pname nrn natregno if natregno!="" & length(natregno)!=10
replace natregno= subinstr(natregno,"09","009",.) if record_id==3019 //1 change
replace natregno= subinstr(natregno,"903","0903",.) if record_id==2018 //1 change
replace natregno= subinstr(natregno,"000","00",.) if record_id==1423 //1 change
replace natregno=natregno + "0057" if record_id==1581 //1 change
replace natregno= subinstr(natregno,"204","0204",.) if record_id==612 //1 change
replace natregno= subinstr(natregno,"4","",.) if record_id==701 //1 change
replace natregno= subinstr(natregno,"12","0012",.) if record_id==321 //1 change
replace natregno= subinstr(natregno,"30","310",.) if record_id==2004 //1 change
replace natregno= subinstr(natregno,"2","23",.) if record_id==268 //1 change
replace natregno=natregno + "0087" if record_id==2941 //1 change
replace natregno= subinstr(natregno,"31","311",.) if record_id==2492 //1 change
replace natregno= subinstr(natregno,"7","77",.) if record_id==2204 //1 change
replace natregno= subinstr(natregno,"1","01",.) if record_id==379 //1 change
replace natregno="000" + natregno if record_id==3208 //1 change
replace natregno=natregno + "0018" if record_id==1924 //1 change
replace natregno= subinstr(natregno,"7","07",.) if record_id==845 //1 change
replace natregno= subinstr(natregno,"4","48",.) if record_id==1257 //1 change
replace natregno="0" + natregno if record_id==2709 //1 change
replace natregno= subinstr(natregno,"80","8",.) if record_id==1562 //1 change
replace natregno= subinstr(natregno,"2","02",.) if record_id==3344 //1 change
replace natregno= subinstr(natregno,"702","70",.) if record_id==120 //1 change
replace pname= subinstr(pname,"EN","ER",.) if record_id==120 //1 change
replace corr_KG=corr_KG+1 if record_id==120 //1 change
replace natregno= subinstr(natregno,"80","080",.) if record_id==230 //1 change
replace natregno="0" + natregno if record_id==3085 //1 change
replace natregno= subinstr(natregno,"29","9",.) if record_id==1073 //1 change
replace natregno="000" + natregno if record_id==782 //1 change
replace natregno="0" + natregno if record_id==1815 //1 change
replace natregno="00" + natregno if record_id==2540 //1 change
replace natregno= subinstr(natregno,"43","4",.) if record_id==951 //1 change
replace natregno=natregno + "0045" if record_id==3138 //1 change
replace natregno="0" + natregno if record_id==1740 //1 change
replace natregno="0" + natregno if record_id==85 //1 change
replace natregno= subinstr(natregno,"5","",.) if record_id==1268 //1 change
replace natregno= subinstr(natregno,"1","",.) if record_id==914 //1 change
replace natregno= subinstr(natregno,"01","001",.) if record_id==128 //1 change
replace natregno="" if record_id==1578 //1 change - cannot find on electoral list
replace natregno="0" + natregno if record_id==17 //1 change
replace natregno="0" + natregno if record_id==2723 //1 change
replace natregno= subinstr(natregno,"000","00",.) if record_id==1530 //1 change
replace natregno= subinstr(natregno,"7","",.) if record_id==1304 //1 change
replace pname= subinstr(pname,"AM","AMS",.) if record_id==1304 //1 change
//first and last names are inverted so switch these
replace pname=pname + " " + pname if record_id==1304 //1 change
gen n = regexs(2)+", "+regexs(1) if regexm(pname, "([a-zA-Z]+)[ ]*([a-zA-Z]+)")
replace n= subinstr(n,",","",.) if record_id==1304 //1 change
replace pname=n if record_id==1304 //1 change
drop n
replace corr_NR=corr_NR+1 if record_id==3019|record_id==951 // changes
replace corr_AH=corr_AH+1 if record_id==1423|record_id==701|record_id==2004|record_id==2492|record_id==1257 ///
							|record_id==1562|record_id==1530|record_id==1304 // changes
replace corr_KG=corr_KG+1 if record_id==1581|record_id==321|record_id==268|record_id==3344|record_id==120 ///
							|record_id==230|record_id==1073|record_id==85|record_id==128|record_id==17 // changes
replace corr_intern=corr_intern+1 if record_id==2941|record_id==2204|record_id==379|record_id==1924 //4 changes
replace corr_TH=corr_TH+1 if record_id==1268|record_id==914 //2 changes
** (33) invalid - dob but missing nrn #
count if regexm(natregno,"9999")|regexm(natregno,"99") //2 (checked against electoral list)
//list record_id ddda natregno pname if regexm(natregno,"9999")|regexm(natregno,"99")
replace natregno="" if record_id==2096
replace natregno= subinstr(natregno,"21","15",.) if record_id==376 //1 change
replace natregno= subinstr(natregno,"99","14",.) if record_id==376 //1 change
replace natregno= subinstr(natregno,"99","00",.) if record_id==3081 //1 change
replace corr_NR=corr_NR+1 if record_id==2096 //1 change
replace corr_AH=corr_AH+1 if record_id==3081 //1 change
** (34) invalid - female with 'male' NRN
count if sex==2 & (regex(substr(natregno,-2,1), "[1,3,5,7,9]")) & !(strmatch(strupper(natregno), "*-9999*")) //11
//list record_id ddda pname natregno sex cod* if sex==2 & (regex(substr(natregno,-2,1), "[1,3,5,7,9]")) & !(strmatch(strupper(natregno), "*-9999*"))
recode sex 2=1 if record_id==1423|record_id==1537|record_id==2335|record_id==1017|record_id==2891 //5 changes
replace corr_AH=corr_AH+1 if record_id==1423|record_id==1017 //2 changes
replace corr_KG=corr_KG+1 if record_id==2335 //1 change
** (35) invalid - male with 'female' NRN
count if sex==1 & regex(substr(natregno,-2,1), "[0,2,4,6,8]") //8
//list record_id ddda pname natregno sex cod* if sex==1 & regex(substr(natregno,-2,1), "[0,2,4,6,8]")
recode sex 1=2 if record_id==817|record_id==3294|record_id==3300|record_id==3311|record_id==2155|record_id==2012 //6 changes
replace corr_AH=corr_AH+1 if record_id==817|record_id==2155|record_id==2012 //3 changes
replace corr_KG=corr_KG+1 if record_id==3294|record_id==3300|record_id==3311 //3 changes
** (36) invalid - age vs dob(nrn)
gen dobyr=substr(natregno, 1, 2) if natregno!=""
gen dobmon=substr(natregno, 3, 2) if natregno!=""
gen dobday=substr(natregno, 5, 2) if natregno!=""
count if (agetxt!=6 & natregno!="")|regex(substr(dobyr,1,1),"[0]") //19
//list record_id age agetxt dod natregno dobyr dobmon dobday if (agetxt!=6 & natregno!="")|regex(substr(dobyr,1,1),"[0]")
replace dobyr="20"+dobyr if (agetxt!=6 & natregno!="")|regex(substr(dobyr,1,1),"[0]") //19 changes
replace dobyr="19"+dobyr if length(dobyr)==2 //3,042 changes
count if length(dobyr)>4 //0
gen birthdate=dobyr+dobmon+dobday
gen dob=date(birthdate, "YMD")
format dob %tdCCYY-NN-DD
gen age2=int((dod - dob)/365.25) //now use this to assign missing age
count if age!=age2 & natregno!="" & dob!=. //84
sort record_id
//list record_id age age2 agetxt dod dob natregno if age!=age2 & natregno!=""
STOPPED HERE replace
drop nrn dob dobday dobmon dobyr age2
rename natregno nrn

** (17) mstatus: 1=Single 2=Married 3=Separated/Divorced 4=Widowed/Widow/Widower 9=ND
label var mstatus "Marital Status"
label define mstatus_lab 1 "Single" 2 "Married" 3 "Separated/Divorced" 4 "Widowed/Widow/Widower" 99 "ND", modify
label values mstatus mstatus_lab

** (18) occu: Text, if missing=99
label var occu "Occupation"

** (19) durationnum: Integer - min=0, max=99, if missing=99
label var durationnum "Duration of Illness"

** (20) durationtxt
label var durationtxt "Duration Qualifier"
label define durationtxt_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values durationtxt durationtxt_lab

** (21) dod: Y-M-D
format dod %tdCCYY-NN-DD
label var dod "Date of Death"

** (22) dodyear (not included in single year Redcap db but done for multi-year Redcap db)
gen int dodyear=year(dod)
label var dodyear "Year of Death"

** (23) cod1a: Text, if missing=99
label var cod1a "COD 1a"

** (24) onsetnumcod1a: Integer - min=0, max=99, if missing=99
label var onsetnumcod1a "Onset Death Interval-COD 1a"

** (25) onsettxtcod1a: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1a "Onset Qualifier-COD 1a"
label define onsettxtcod1a_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1a onsettxtcod1a_lab

** (26) cod1b: Text, if missing=99
label var cod1b "COD 1b"

** (27) onsetnumcod1b: Integer - min=0, max=99, if missing=99
label var onsetnumcod1b "Onset Death Interval-COD 1b"

** (28) onsettxtcod1b: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1b "Onset Qualifier-COD 1b"
label define onsettxtcod1b_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1b onsettxtcod1b_lab

** (29) cod1c: Text, if missing=99
label var cod1c "COD 1c"

** (30) onsetnumcod1c: Integer - min=0, max=99, if missing=99
label var onsetnumcod1c "Onset Death Interval-COD 1c"

** (31) onsettxtcod1c: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1c "Onset Qualifier-COD 1c"
label define onsettxtcod1c_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1c onsettxtcod1c_lab

** (32) cod1d: Text, if missing=99
label var cod1d "COD 1d"

** (33) onsetnumcod1d: Integer - min=0, max=99, if missing=99
label var onsetnumcod1d "Onset Death Interval-COD 1d"

** (34) onsettxtcod1d: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1d "Onset Qualifier-COD 1d"
label define onsettxtcod1d_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1d onsettxtcod1d_lab

** (35) cod2a: Text, if missing=99
label var cod2a "COD 2a"

** (36) onsetnumcod2a: Integer - min=0, max=99, if missing=99
label var onsetnumcod2a "Onset Death Interval-COD 2a"

** (37) onsettxtcod2a: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod2a "Onset Qualifier-COD 2a"
label define onsettxtcod2a_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod2a onsettxtcod2a_lab

** (38) cod2b: Text, if missing=99
label var cod2b "COD 2b"

** (39) onsetnumcod2b: Integer - min=0, max=99, if missing=99
label var onsetnumcod2b "Onset Death Interval-COD 2b"

** (40) onsettxtcod2b: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod2b "Onset Qualifier-COD 2b"
label define onsettxtcod2b_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod2b onsettxtcod2b_lab

** (41) pod: Text, if missing=99
label var pod "Place of Death"

** (42) deathparish
label var deathparish "Death Parish"
label define deathparish_lab 1 "Christ Church" 2 "St. Andrew" 3 "St. George" 4 "St. James" 5 "St. John" 6 "St. Joseph" ///
						7 "St. Lucy" 8 "St. Michael" 9 "St. Peter" 10 "St. Philip" 11 "St. Thomas" 99 "ND", modify
label values deathparish deathparish_lab

** (43) regdate: Y-M-D
label var regdate "Date of Registration"
format regdate %tdCCYY-NN-DD

** (44) certifier: Text, if missing=99
label var certifier "Name of Certifier"

** (45) certifieraddr: Text, if missing=99
label var certifieraddr "Address of Certifier"

** (46) namematch: readonly
label var namematch "Name Match"
label define namematch_lab 1 "names match but different person" 2 "no name match", modify
label values namematch namematch_lab

** (47) death_certificate_complete (auto-generated by REDCap): 0=Incomplete 1=Unverified 2=Complete
rename death_certificate_complete recstatdc
label var recstatdc "Record Status-DC Form"
label define recstatdc_lab 0 "Incomplete" 1 "Unverified" 2 "Complete", modify
label values recstatdc recstatdc_lab


*******************
** TRACKING FORM **
*******************

** (48) tfdddoa: Y-M-D H:M, readonly
format tfdddoa %tcCCYY-NN-DD_HH:MM:SS
label var tfdddoa "TF DateTime"

** (49) tfddda: readonly, user logged into redcap
gen tfddda1=.
replace tfddda1=25 if tfddda=="ashley.henry" //using codebook tfddda to see all possible entries in this field
replace tfddda1=25 if tfddda=="ashleyhenry"
replace tfddda1=4 if tfddda=="karen.greene"
replace tfddda1=13 if tfddda=="kirt.gill"
replace tfddda1=20 if tfddda=="nicolette.roachford"
replace tfddda1=14 if tfddda=="tamisha.hunte"
replace tfddda1=98 if tfddda=="t.g"
drop tfddda
rename tfddda1 tfddda

label var tfddda "TF DA"
label define tfddda_lab 4 "KG" 13 "KWG" 14 "TH" 20 "NR" 25 "AH" 98 "intern", modify
label values tfddda tfddda_lab

** (50) tfregnumstart: integer
label var tfregnumstart "Registry #-Start"

** (51) tfdistrictstart: letters only
label var tfdistrictstart "District-Start"

** (52) tfregnumend: integer
label var tfregnumend "Registry #-End"

** (53) tfdistrictend: letters only
label var tfdistrictend "District-End"

** (53) tfddtxt
label var tfddtxt "TF Comments"

** (54) tracking_complete (auto-generated by REDCap): 0=Incomplete 1=Unverified 2=Complete
rename tracking_complete recstattf
label var recstattf "Record Status-TF Form"
label define recstattf_lab 0 "Incomplete" 1 "Unverified" 2 "Complete", modify
label values recstattf recstattf_lab



** ORDER variables according to position in DeathData REDCap database
order record_id cfdate cfda certtype regnum district pname address parish sex age ///
	  nrnnd nrn mstatus occu durationnum durationtxt dod deathyear cod1a ///
	  onsetnumcod1a onsettxtcod1a cod1b onsetnumcod1b onsettxtcod1b cod1c ///
	  onsetnumcod1c onsettxtcod1c cod1d onsetnumcod1d onsettxtcod1d cod2a ///
	  onsetnumcod2a onsettxtcod2a cod2b onsetnumcod2b onsettxtcod2b pod ///
	  deathparish regdate certifier certifieraddr namematch death_certificate_complete


** REMOVE variables not needed in DeathData REDCap database;
** ORDER variables according to position in DeathData REDCap database
drop deathid dbid regno natregno casefindingdate cftime regnumtemp durtxt2 onsettxt2
order record_id cfdate cfda certtype regnum district pname address parish sex ///
	  age nrnnd nrn mstatus occu durationnum durationtxt dod deathyear cod1a ///
	  onsetnumcod1a onsettxtcod1a cod1b onsetnumcod1b onsettxtcod1b cod1c ///
	  onsetnumcod1c onsettxtcod1c cod1d onsetnumcod1d onsettxtcod1d cod2a ///
	  onsetnumcod2a onsettxtcod2a cod2b onsetnumcod2b onsettxtcod2b pod ///
	  deathparish regdate certifier certifieraddr namematch death_certificate_complete

	  
count //24,188

** QUALITY REPORT
gen totalcorr=rowtotal(corr_AH corr_KG corr_NR corr_TH)
gen corr_TOT=sum(totalcorr)


label data "BNR MORTALITY data 2008-2017"
notes _dta :These data prepared from BB national death register & BNR (MS Access) deathdata database
save "`datapath'\version01\2-working\2018_deaths_cleaned_dc" ,replace

